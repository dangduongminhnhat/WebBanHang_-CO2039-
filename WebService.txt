Các class của service:
•	Service quản lý có các class: ManagerService, Accounting, BestSeller, ProductFromProvider, Provider.
•	Service người dùng có các class: ClientService, ProductForSale, User.
•	Ngoài ra còn hai class service: Product và Service. Trong đó, class ProductForSale và ProductFromProvider thừa kế class Product; class ClientService và ManagerService thừa kế class Service
	- Các class service quản lý nằm trong thư mục com/example/model/manager.
	- Các class service người dùng nằm trong thư mục com/example/model/user.
	- 2 class Product và Service nằm trong thư mục com/example/model

Hai class cha Product và Service:
•	Class Product có các thuộc tính:
	- private String image: link ảnh của sản phẩm
	- private String description: mô tả của sản phẩm
	- private String name: tên của sản phẩm
	- private String category: phân loại của sản phẩm
	- public String getName(), getCategory(), getImage(), getDescription(): trả về link ảnh, mô tả, tên và phân loại của sản phẩm.

•	Class Service có các thuộc tính:
	- protected static ArrayList<ProductForSale> products: lưu danh sách sản phẩm đang bán
	- protected static ArrayList<ProductForSale> newProducts: lưu danh sách sản phẩm mới nhập
	- protected static ArrayList<ProductForSale> providers: lưu danh sách các nhà cung cấp sản phẩm trên thị trường
	- protected static ArrayList<ProductForSale> saleOffProducts: lưu danh sách sản phẩm đang khuyến mãi
	- public static BestSeller getBestSeller(): trả về sản phẩm bán chạy nhất của cửa hàng
	- public static ArrayList<ProductForSale> getProducts(): trả về danh sách sản phẩm đang bày bán
	- public static ArrayList<ProductForSale> getSaleOffProducts(): trả về danh sách sản phẩm đang bày bán
	- public static ArrayList<ProductForSale> getNewProducts(): trả về danh sách sản phẩm mới nhập về


Về service quản lý có các class: 
•	Class ManagerService kế thừa các thuộc tính của class Service và có các thuộc tính riêng:
	- public static ArrayList<User> users: lưu danh sách khách hàng đã đăng ký
	- public static ArrayList<Provider> providers: lưu danh sách các nhà cung cấp sản phẩm mà cửa hàng đã nhập hàng
	- public static Accounting accounting: lưu dữ liệu về kế toán (lợi nhuận thu, chi)
	- public static void importProduct(Provider provider, int quantity): cập nhật chi phí nhập hàng của cửa hàng
		+ Nếu nhà cung cấp này chưa có trong danh sách các nhà cung cấp sản phẩm cho cửa hàng: 
•	Thêm nhà cung cấp này vào danh sách các nhà cung cấp của cửa hàng
•	Thêm sản phẩm vừa nhập vào danh sách sản phẩm đang bày bán và danh sách sản phẩm mới nhập về của cửa hàng
		+ Else nếu nhà cung cấp này đã có trong danh sách các nhà cung cấp sản phẩm, tức là sản phẩm đã có trong danh sách bày bán thì cập nhật số lượng sản phẩm sau khi nhập hàng
	- public static void addSaleOffProduct(ProductForSale product): thêm sản phẩm vào danh sách sản phẩm đang khuyến mãi
	- public static void removeSaleOffProducts(ProductForSale product): bỏ sản phẩm ra khỏi danh sách sản phẩm đang khuyến mãi
	- public static void clearSaleOffProducts(): xóa danh sách sản phẩm đang khuyến mãi
	- public static void clearNewProductsList(): xóa danh sách sản phẩm mới nhập về

•	Class Accounting có các thuộc tính:
	- private expense: chi phí đã chi
	- private revenue: doanh thu
	- void updateExpense(), updateRevenue(): cập nhật chi phí và doanh thu của cửa hàng.

•	Class BestSeller có các thuộc tính:
	- Constructor public BestSeller(ProductForSale product, int quantity)
	- private ProductForSale product: sản phẩm bán chạy nhất của cửa hàng
	- private int quantity: số lượng đã bán của sản phẩm đó

•	Class ProductFromProvider kế thừa các thuộc tính của class Product và có thuộc tính riêng là:
	- private int initialPrice: giá ban đầu của sản phẩm

•	Class Provider có các thuộc tính:
	- private ProductFromProvider product: sản phẩm của nhà cung cấp
	- private String providerName: tên của nhà cung cấp sản phẩm

Về service người dùng có các class:
•	Class ClientService kế thừa các thuộc tính của class Service và có các thuộc tính riêng là:
	- public static User login(String userId, String password): trả về tài khoản người dùng bằng cách kiểm tra userId và password người dùng nhập vào, nếu userId hoặc password không chính xác thì thì trả về null
	- public static User register(): thêm tài khoản người dùng mới đăng ký vào danh sách tài khoản người dùng của cửa hàng và trả về tài khoản mới này
	- public static boolean isExistedAccount(String userId): kiểm tra userId đã tồn tại hay chưa, nếu đã tồn tại thì trả về true và ngược lại

•	Class ProductForSale kế thừa các thuộc tính của class Product và có các thuộc tính riêng là:
	- Constructor public ProductForSale(String image, String description, String name, String category, int quantity)
	- Nested Class CustomerReview: có các thuộc tính:
		+ private int noOfStars: số sao đánh giá
		+ private String review: review của sản phẩm
	- private int quantity: số lượng của sản phẩm
	- private int unitPrice: đơn giá của sản phẩm
	- private ArrayList<CustomerReview> crs: danh sách review của sản phẩm
	- private int noOfSolds: số lượng đã bán của sản phẩm
	- public void addCustomerReview(): thêm review của khách hàng vào danh sách review của sản phẩm
	- public static void updateNoOfSolds(User.CartState cartState): cập nhật số sản phẩm đã bán cũng như số sản phẩm còn lại dựa vào trạng thái giỏ hàng
	- public void updateQuantity(int quantity): cập nhật số lượng của sản phẩm

•	Class User có các thuộc tính:
	- Nested Class BankAccount: có các thuộc tính:
		+ private int balance: số dư tài khoản ngân hàng
		+ public boolean pay(int money): trả về true nếu balance > money
		+ public void deposit(int money): nạp tiền vào tài khoản
	- Nested Class CartState: có các thuộc tính:
		+ public ArrayList<ProductForSale> products: danh sách sản phẩm đang trong giỏ hàng
		+ public ArrayList<Integer> quantityEachProduct: số lượng của mỗi sản phẩm đang trong giỏ hàng
		+ public int totalCost: tổng giá tiền của các sản phẩm đang trong giỏ hàng
	- Nested Class BuyHistory: có các thuộc tính:
		+ public ArrayList<ProductForSale> products: danh sách sản phẩm đã mua
		+ public ArrayList<Integer> quantityEachProduct: số lượng của mỗi sản phẩm đã mua
		+ public int totalCost: tổng số tiền của các sản phẩm đã mua
	- Nested Class OrderState: có các thuộc tính:
		+ public ArrayList<ProductForSale> products: danh sách sản phẩm vừa đặt mua trong đơn hàng
		+ public ArrayList<Integer> quantityEachProduct: số lượng của mỗi sản phẩm vừa đặt mua trong đơn hàng
		+ public int totalCost: trạng thái giao hàng của các sản phẩm vừa đặt mua trong đơn hàng
	- private boolean logInState: trạng thái đăng nhập, nếu true thì nơi khác không thể đăng nhập vào trang web bán hàng và ngược lại
	- private String fullName: tên đầy đủ người dùng
	- private String userId: id đăng nhập của người dùng
	- private String password: mật khẩu đăng nhập của người dùng
	- private String phoneNums: số điện thoại của người dùng
	- private BankAccount bankAcc: tài khoản ngân hàng của người dùng
	- private BuyingHistory buyingHistory: lịch sử mua hàng của người dùng
	- private OrderState orderState: trạng thái đơn hàng của người dùng
	- private CartState cartState: trạng thái giỏ hàng của người dùng
	- public void setActiveLoginState(): set trạng thái đăng nhập bằng true khi tài khoản đã được đăng nhập
	- public void logout(): set trạng thái đăng nhập bằng false khi tài khoản được đăng xuất
	- public void addToCart(ProductForSale product, int quantity): thêm sản phẩm vào giỏ hàng
	- public void removeFromCart(ProductForSale product, int quantity): bỏ sản phẩm ra khỏi giỏ hàng
	- public void clearCart(): clear giỏ hàng
	- public void updateOrderState(): cập nhật trạng thái của đơn hàng vừa đặt mua
	- public void updateBuyingHistory(): cập nhật sản phẩm vừa đặt mua vào lịch sử mua hàng
	- public boolean bankPay(): thanh toán đơn hàng trong giỏ hàng qua ngân hàng -> nếu đủ tiền trong tài khoản ngân hàng thì:
		+ cập nhật doanh thu của cửa hàng
		+ cập nhật lại số sản phẩm đã bán của các sản phẩm vừa được mua
		+ cập nhật trạng thái đơn hàng
		+ cập nhật lịch sử mua hàng
		+ clear giỏ hàng
	- public void depositToBankAcc(int money): chuyển tiền vào tài khoản ngân hàng
	- public void addProductReview(ProductForSale product, CustomerReview cr): thêm đánh giá và review sản phẩm của khách hàng đã mua
